name: Dart

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

      - name: Install dependencies
        run: dart pub get

      - name: Set up Git
        run: |
          git config --global user.name "Package release bot"
          git config --global user.email "nirmalraj.s@gallabox.com"

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      # - name: Analyze project source
      #   run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test
      - name: Activate Melos v6.0.0
        run: dart pub global activate melos 6.0.0

      - name: create a release commit and tag with melos
        run: melos version --all --yes

      - name: push the created release tag and commit to the repo main branch
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: git push https://nirmalatgallabox:${PAT_TOKEN}@github.com/nirmalatgallabox/melos_package_maintainer.git main --follow-tag
